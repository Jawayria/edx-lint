"""The edx_lint_write command."""

import ConfigParser
import cStringIO as StringIO
import os
import sys

import pkg_resources

from edx_lint.tamper_evident import TamperEvidentFile


WARNING_HEADER = """\
# ** DO NOT EDIT THIS FILE **
# ** It is generated by edx_lint_write **
#
#
#
#
#
#
#
#
# STAY AWAY!
#
#
#
#
#
# SERIOUSLY.
#
# ------------------------------
"""

def main(argv=None):
    if argv is None:
        argv = sys.argv[1:]

    if len(argv) != 1:
        print "Please provide the name of a file to write."
        return 1

    filename = argv[0]
    resource_name = "files/" + filename
    base, ext = os.path.splitext(filename)
    tweaks_name = base + "_tweaks" + ext

    if not pkg_resources.resource_exists("edx_lint", resource_name):
        print "Don't have file %r to write." % filename
        return 2

    if os.path.exists(filename):
        print "Checking existing copy of %s" % filename
        tef = TamperEvidentFile(filename)
        if not tef.validate():
            print "Your copy of %s seems to have been edited. Not writing it." % filename
            return 3

    print "Reading edx_lint/files/%s" % filename
    cfg = ConfigParser.RawConfigParser()
    cfg.readfp(pkg_resources.resource_stream("edx_lint", resource_name), resource_name)

    if os.path.exists(tweaks_name):
        print "Applying local tweaks from %s" % tweaks_name
        cfg_tweaks = ConfigParser.RawConfigParser()
        cfg_tweaks.read([tweaks_name])

        for section in cfg_tweaks.sections():
            for option in cfg_tweaks.options(section):
                value = cfg_tweaks.get(section, option)
                cfg.set(section, option, value)

    print "Writing %s" % filename
    output_text = StringIO.StringIO()
    output_text.write(WARNING_HEADER)
    cfg.write(output_text)

    out_tef = TamperEvidentFile(filename)
    out_tef.write(output_text.getvalue())

    return 0
